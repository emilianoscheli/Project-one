[{"C:\\Users\\LangTecnologia\\my-app\\src\\index.js":"1","C:\\Users\\LangTecnologia\\my-app\\src\\App.js":"2","C:\\Users\\LangTecnologia\\my-app\\src\\reportWebVitals.js":"3"},{"size":535,"mtime":1666840449603,"results":"4","hashOfConfig":"5"},{"size":872,"mtime":1666842327658,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1666840449988,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"11rba4y",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"C:\\Users\\LangTecnologia\\my-app\\src\\index.js",[],[],[],"C:\\Users\\LangTecnologia\\my-app\\src\\App.js",["18","19","20"],[],"C:\\Users\\LangTecnologia\\my-app\\src\\reportWebVitals.js",[],[],{"ruleId":"21","severity":1,"message":"22","line":9,"column":12,"nodeType":"23","messageId":"24","endLine":9,"endColumn":16},{"ruleId":"21","severity":1,"message":"25","line":9,"column":18,"nodeType":"23","messageId":"24","endLine":9,"endColumn":25},{"ruleId":"26","severity":1,"message":"27","line":19,"column":12,"nodeType":"28","endLine":22,"endColumn":4},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]